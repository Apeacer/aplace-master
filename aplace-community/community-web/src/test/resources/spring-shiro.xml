<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

<!-- Shiro生命周期处理器-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

<!-- 静态注入，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	    <property name="arguments" ref="securityManager"/>
	</bean>
	

<!-- <bean id="securityUtils" name="org.apache.shiro.SecurityUtils">
	<property name="securityManager" ref="securityManager"/>
</bean>
 -->





<!-- 安全管理器,通过它得到subject，进而得到当前用户 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="commonrealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="cacheManager" ref="jedisCacheService"/>
    </bean>
    
<!--1- ream 授权 认证 -->
	<bean id="commonrealm" class="com.aplace.community.shiro.CommonRealm"/>   

<!--2- Session Manager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 相隔多久检查一次session的有效性   -->
	 	<property name="sessionValidationInterval" value="1800000"/>  
	 	<!-- session 有效时间为半小时 （毫秒单位）-->  
		<property name="globalSessionTimeout" value="1800000"/>
	   	<property name="sessionDAO" ref="customSessionDAO"/>
	   	<!-- session 监听，可以多个。 -->
	   	<property name="sessionListeners">
	       <list>
	           <ref bean="sessionListener"/>
	       </list>
	   	</property>
	   	<!-- 间隔多少时间检查，不配置是60分钟 -->	
	  	<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
	  	<!-- 是否开启 检测，默认开启 -->
	  	<property name="sessionValidationSchedulerEnabled" value="true"/>
	   	<!-- 是否删除无效的，默认也是开启 -->
	  	<property name="deleteInvalidSessions" value="true"/>
		<!-- 会话Cookie模板 -->
	   	<property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
	
	<!-- 会话操作对象 -->
	<bean id="customSessionDAO" class="com.aplace.community.shiro.CustomSessionDAO">
		<property name="sessionRepository" ref="sessionRepository"/>
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	
	<!-- 会话底层缓存操作 -->
	<bean id="sessionRepository" class="com.aplace.community.shiro.service.impl.JedisSessionRepository">
		<!-- spring-cache-jedis文件中定义 -->
		<property name="jedisManager" ref="jedisManager"></property>
	</bean>
	
	<!-- 会话Session ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	
	<!-- 会话生命周期管理 -->
	<bean id="sessionListener" class="com.aplace.community.shiro.service.impl.SessionListenerImpl">
		<property name="sessionRepository" ref="sessionRepository"/>
	</bean>
	
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		 <!-- 间隔多少时间检查，不配置是60分钟 -->
	     <property name="interval" value="1800000"/>
	     <property name="sessionManager" ref="sessionManager"/>
	</bean>

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!--cookie的name -->
	    <constructor-arg value="v_v-s-aplace"/>
	    <property name="httpOnly" value="true"/>
	    <!--cookie的有效时间 -->
	    <property name="maxAge" value="-1"/>
	    <!-- 配置存储Session Cookie的domain为 一级域名
	    <property name="domain" value=".itboy.net"/>
	     -->
	</bean>
	
<!--3- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

<!-- 用户信息记住我功能的相关配置 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="v_v-re-aplace"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="2592000"/><!-- 30天时间，记住我30天 -->
	</bean>
	
<!--4- 管理shiroCache操作对象，确定由redis实现，若更改使用的缓存数据库，应将此类更换成其他实现 -->
	<bean id="jedisCacheService" class="com.aplace.community.shiro.service.impl.JedisCacheServiceImpl">
		<!-- spring-cache-jedis文件中定义 -->
		<property name="jedisManager" ref="jedisManager"/>
	</bean>
	
	
	
<!-- filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/do_signin" />
		<!--	TODO 待提取	-->
		<property name="successUrl" value="/" />
		<property name="unauthorizedUrl" value="/?login" />
		
<!--	初始配置，现采用自定义	-->
<!--		<property name="filterChainDefinitions" >-->
<!--			<value>-->
<!--				/** = anon-->
<!--				/page/login.jsp = anon-->
<!--				/page/register/* = anon-->
<!--				/page/index.jsp = authc-->
<!--				/page/addItem* = authc,roles[数据管理员]-->
<!--				/page/file* = authc,roleOR[普通用户,数据管理员]-->
<!--				/page/listItems* = authc,roleOR[数据管理员,普通用户]-->
<!--				/page/showItem* = authc,roleOR[数据管理员,普通用户]-->
<!--				/page/updateItem*=authc,roles[数据管理员]-->
<!--            </value>-->
<!--		</property>-->
		<!-- 读取初始自定义权限内容-->
<!--        <property name="filterChainDefinitions" value="#{shiroManager.loadFilterChainDefinitions()}"/>   
       <property name="filters">
           <util:map>
              <entry key="login" value-ref="login"></entry>
              <entry key="role" value-ref="role"></entry>
              <entry key="simple" value-ref="simple"></entry>
              <entry key="permission" value-ref="permission"></entry>
              <entry key="kickout" value-ref="kickoutSessionFilter"></entry>
           </util:map>
       </property> -->
 	</bean>	



	

    






<!-- session 校验单个用户是否多次登录 -->
<!-- 	<bean id="kickoutSessionFilter"   class="com.sojson.core.shiro.filter.KickoutSessionFilter">  
	    <property name="kickoutUrl" value="/u/login.shtml?kickout"/>  
	</bean>   -->
	<!-- 静态注入 jedisShiroSessionRepository-->
<!-- 	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="com.sojson.core.shiro.filter.KickoutSessionFilter.setShiroSessionRepository"/>
	    <property name="arguments" ref="jedisShiroSessionRepository"/>
	</bean> -->
</beans>













