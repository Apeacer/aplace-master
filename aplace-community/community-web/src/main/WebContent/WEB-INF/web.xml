<?xml version="1.0" encoding="utf-8"?>
<web-app version="3.0"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <display-name>Archetype Created Web Application</display-name>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 全局配置设置(applicationContext)路径在classpath -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:src/main/WebContent/applicationContext.xml
            <!--classpath*:spring-cache-jedis.xml-->
            <!--classpath*:src/main/test/resources/spring-shiro.xml-->
        </param-value>
    </context-param>

    <!-- 编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--<filter>-->
        <!--<filter-name>shiroFilter</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
        <!--&lt;!&ndash; <init-param>-->
        <!--<!- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理-->
            <!--<param-name>targetFilterLifecycle</param-name>-->
            <!--<param-value>true</param-value>-->
        <!--</init-param>  &ndash;&gt;-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>shiroFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!-- ContextLoaderListener是Spring的监听器，它的作用就是启动Web容器时，自动装配ApplicationContext的配置信息。 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 防止Spring内存溢出监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- Spring mvc 请求统一拦截处理servlet -->
    <servlet>
        <servlet-name>SpringRequest</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:src/main/WebContent/spring-mvc.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>SpringRequest</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>


    <!--log4j配置文件加载-->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <!--启动一个watchdog线程每1800秒扫描一下log4j配置文件的变化-->
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>1800000</param-value>
    </context-param>
    <!--spring log4j监听器-->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>




</web-app>
